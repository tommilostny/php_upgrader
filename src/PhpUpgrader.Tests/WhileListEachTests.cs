using PhpUpgrader.Mona.UpgradeExtensions;

namespace PhpUpgrader.Tests;

public class WhileListEachTests : UnitTestWithOutputBase
{
    public WhileListEachTests(ITestOutputHelper output) : base(output)
    {
    }

    [Theory]
    [InlineData("$pocet_prvku = count($NAVIGACE);\r\n\t\t$repeat = 0;\r\n\t\treset($NAVIGACE);\r\n\t\tksort($NAVIGACE);\r\n\t\twhile(list($idn)=each($NAVIGACE)):\r\n\t\t//prevod na male pismena")]
    [InlineData("//------------------------\r\n\t\t//producer_index\r\n\t\t$producer_index = \"0\";//reset\r\n\t\treset($PRODUCER); while(list($idp)=each($PRODUCER)):\r\n\t\t\tif ($PRODUCER[\"$idp\"][\"id\"] == $row_basic['producer_id']):\r\n\t\t\t\t$producer_index = $PRODUCER[\"$idp\"][\"index\"];\r\n\t\t\t\t$producer_id = $PRODUCER[\"$idp\"][\"id\"];\r\n\t\t\t\t$producer_select = $PRODUCER[\"$idp\"][\"name\"];\t\t\t\t\t\t\t\r\n\t\t\tendif;\t\r\n\t\tendwhile;\r\n\t\t//style_index\r\n\t\t$style_index = \"0\";//reset\r\n\t\treset($STYLE); while(list($idp)=each($STYLE)):\r\n\t\t\tif ($STYLE[\"$idp\"][\"id\"] == $row_basic['style_id']):\t\t\t\t\t\t\r\n\t\t\t\t$style_index = $STYLE[\"$idp\"][\"index\"];\r\n\t\t\t\t$style_id = $STYLE[\"$idp\"][\"id\"];\t\t\t\t\t\t\t\r\n\t\t\t\t$style_select = $STYLE[\"$idp\"][\"name\"];\t\t\t\t\t\t\t\r\n\t\t\tendif;\t\r\n\t\tendwhile;\r\n\t\t// STAVY SKLADU\r\n\t\t$query_stav_skladu = \"SELECT * FROM stavy_skladu WHERE language_id = \".USER_LANG.\" ORDER BY stav_id ASC \";\r\n\t\t$data_stav_skladu = pg_query($query_stav_skladu);\r\n\t\t$row_stav_skladu = pg_fetch_assoc($data_stav_skladu);\r\n\t\t$index = 1;")]
    [InlineData("<?php\r\nfunction vypsani_obsahu_adresare($id)\r\n  {\r\n    if($handle=opendir(\"../data_\".$id.\"/\"))\r\n      {\r\n        while($file = readdir($handle))\r\n          {\r\n            $polozky[count($polozky)] = $file;\r\n          }\r\n\r\n        closedir($handle);\r\n        sort($polozky);\r\n      }\r\n\r\n    reset($polozky);\r\n\r\n\r\n\r\n    while(list($key, $val) = each($polozky))\r\n      {\r\n        $val_explode = explode(\".\", $val);\r\n\r\n        if(($val != \".\") && ($val != \"..\")&& (!isset($val_explode[1])))\r\n          {\r\n            echo \"<br />(DIR) \";\r\n            echo \" \".$val.\"<br />\\n\";\r\n          }\r\n        elseif(($val != \".\") && ($val != \"..\"))\r\n          {\r\n            echo \"<br />\".$val.\" neni adresar<br />\";\r\n          }\r\n      }\r\n  }\r\n?>")]
    [InlineData("//var_dump($SHOP_MENU);\r\nif($SHOP_MENU != NULL):\r\nreset($SHOP_MENU);\r\n$zobrazovat_menu_ano = 0;\r\nwhile(list($category_id)=each($SHOP_MENU)):\r\n reset($SHOP_MENU[\"$category_id\"]);\t\r\n\r\n$category_id_nad_1 = najdi_v_db(\"shop_category\",\"category_id\",$category_id,\"shop_id_up\");\r\n//$category_id_nad_2 = najdi_v_db(\"shop_category\",\"category_id\",$category_id_nad_1,\"shop_id_up\");\r\n//$category_id_nad_3 = najdi_v_db(\"shop_category\",\"category_id\",$category_id_nad_2,\"shop_id_up\");")]
    [InlineData("function sestav_darky_roll($SETY,$DATA,$PRODUCT){\r\n\t//kategorie_setu\r\n\tif($SETY != NULL):\r\n\t\treset($SETY);\r\n\t\twhile(list($ids)=each($SETY)):\r\n\t\t\treset($SETY[\"$ids\"]);\r\n\t\t\tif($DATA[\"$ids\"] != NULL):\r\n\t\t\t\t//SHOW SKUPINA\r\n\t\t\t\techo '<br />'.LNG_DETAIL_SKUPINA_DAREK.': '.$SETY[\"$ids\"][\"name\"].'<br />';\r\n\t\t\t\techo '<select name=\"darek_roll_'.$SETY[\"$ids\"][\"id\"].'\" id=\"darek_roll_'.$SETY[\"$ids\"][\"id\"].'\" onchange=\"add_darek(\\'darek_roll_'.$SETY[\"$ids\"][\"id\"].'\\',\\'darek_pole\\');\">';\r\n\t\t\t\techo '<option value=\"---------\">---------</option>';//value = 9x - kvuli js kontrole\r\n\t\t\t\twhile(list($idp)=each($DATA[\"$ids\"])):\r\n\t\t\t\t\treset($DATA[\"$ids\"][\"$idp\"]);\r\n\t\t\t\t\t//SHOW DATA DO ROLL MENU\r\n\t\t\t\t\t//echo '<option value=\"'.$DATA[\"$ids\"][\"$idp\"][\"varianta_id\"].'\">'.$DATA[\"$ids\"][\"$idp\"][\"znacka\"].' - '.$DATA[\"$ids\"][\"$idp\"][\"name\"] .' - '. $DATA[\"$ids\"][\"$idp\"][\"varianta_name\"].'</option>';\r\n\t\t\t\t\techo '<option value=\"'.$DATA[\"$ids\"][\"$idp\"][\"varianta_id\"].'\">'.$DATA[\"$ids\"][\"$idp\"][\"name\"].'</option>';\t\t\t\t\t\r\n\t\t\t\t\t//echo '- name: '.$DATA[\"$ids\"][\"$idp\"][\"name\"].' - '.$DATA[\"$ids\"][\"$idp\"][\"varianta_name\"].'<br>';\t\t\t\t\t\r\n\t\t\t\tendwhile;\r\n\t\t\t\techo '</select>';\t\t\t\r\n\t\t\tendif;//pokud skupina neni null\r\n\t\tendwhile;\t\t\t\r\n\tendif;\t\r\n}")]
    [InlineData("/**\r\n     * Constructor\r\n     *\r\n     * @param  array $options Associative array of options\r\n     * @throws Zend_Cache_Exception\r\n     * @return void\r\n     */\r\n    public function __construct(array $options = array())\r\n    {\r\n        while (list($name, $value) = each($options)) {\r\n            $this->setOption($name, $value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the frontend directives\r\n     *\r\n     * @param  array $directives Assoc of directives\r\n     * @throws Zend_Cache_Exception\r\n     * @return void\r\n     */\r\n    public function setDirectives($directives)\r\n    {\r\n        if (!is_array($directives)) Zend_Cache::throwException('Directives parameter must be an array');\r\n        while (list($name, $value) = each($directives)) {\r\n            if (!is_string($name)) {\r\n                Zend_Cache::throwException(\"Incorrect option name : $name\");\r\n            }\r\n            $name = strtolower($name);\r\n            if (array_key_exists($name, $this->_directives)) {\r\n                $this->_directives[$name] = $value;\r\n            }\r\n\r\n        }\r\n\r\n        $this->_loggerSanity();\r\n    }")]
    [InlineData("  function SetColorDefaults() {\r\n    $this->Debug(\"Sparkline :: SetColorDefaults()\", DEBUG_SET);\r\n    $colorDefaults = array(array('aqua',   '#00FFFF'),\r\n                           array('black',  '#010101'), // TODO failure if 000000?\r\n                           array('blue',   '#0000FF'),\r\n                           array('fuscia', '#FF00FF'),\r\n                           array('gray',   '#808080'),\r\n                           array('grey',   '#808080'),\r\n                           array('green',  '#008000'),\r\n                           array('lime',   '#00FF00'),\r\n                           array('maroon', '#800000'),\r\n                           array('navy',   '#000080'),\r\n                           array('olive',  '#808000'),\r\n                           array('purple', '#800080'),\r\n                           array('red',    '#FF0000'),\r\n                           array('silver', '#C0C0C0'),\r\n                           array('teal',   '#008080'),\r\n                           array('white',  '#FFFFFF'),\r\n                           array('yellow', '#FFFF00'));\r\n    while (list(, $v) = each($colorDefaults)) {\r\n      if (!array_key_exists($v[0], $this->colorList)) {\r\n        $this->SetColorHtml($v[0], $v[1]);\r\n      }\r\n    }\r\n  }")]
    [InlineData("    public static function getAllCapabilities(TeraWurfl $wurflObj)\r\n    {\r\n\r\n        foreach ($wurflObj->capabilities as $group) {\r\n            if (!is_array($group)) {\r\n                continue;\r\n            }\r\n            while (list ($key, $value) = each($group)) {\r\n                if (is_bool($value)) {\r\n                    // to have the same type than the official WURFL API\r\n                    $features[$key] = ($value ? 'true' : 'false');\r\n                } else {\r\n                    $features[$key] = $value;\r\n                }\r\n            }\r\n        }\r\n        return $features;\r\n    }")]
    [InlineData("\t<?php reset($PRODUCT_TOP9);while(list($idp)=each($PRODUCT_TOP9)):reset($PRODUCT_TOP9[\"$idp\"]);//START PRODUCT opakovaní !!! NEMENIT !!!?>  \r\n    \t<a href=\"<?php echo $PRODUCT_TOP9[\"$idp\"][\"url\"];?>\">\r\n            <div class=\"blok_produkt\">\r\n                <div class=\"blok_produkt_in\">\r\n                    <div class=\"blok_produkt_pozadi\">\r\n                        <div class=\"nej_obal_foto_vypis\">\r\n                            <?php\r\n                              $odsazeni = 0;\r\n                              if ($PRODUCT_TOP9[\"$idp\"][\"ks_skladem\"] > 0) :\r\n                            ?>\r\n                                <div class=\"akce bg_zelena <?php echo \"t\".$odsazeni; ?>\">\r\n                                  <span>skladem</span>\r\n                                </div>\r\n                            <?php\r\n                                $odsazeni += 28;\r\n                              endif\r\n                            ?>")]
    [InlineData("$products = array();\r\n\t\t\t\t  if($USER_KOSIK_POLOZKY != NULL):\r\n\t\t\t\t  \treset($USER_KOSIK_POLOZKY);\r\n\t\t\t\t\twhile(list($data_id)=each($USER_KOSIK_POLOZKY)):\r\n\t\t\t\t\t\treset($USER_KOSIK_POLOZKY[\"$data_id\"]);\r\n\t\t\t\t\t\t$products[] =$USER_KOSIK_POLOZKY[\"$data_id\"][\"product_id\"];\r\n\t\t\t\t\tendwhile;\r\n\t\t\t\t  endif;\r\n\t\t\t\t  $doprava_zdarma = \"0\";\r\n\t\t\t\t  $language_id = najdi_v_db(\"shop\",\"shop_id\",$DOMAIN_ID,\"default_language_id\");\r\n\t\t\t\t  $dop_zdarma_q = \"SELECT doprava_zdarma FROM product_info WHERE product_id IN (\".implode(\",\",$products).\") AND language_id = \".$language_id.\"\";\r\n\t\t\t\t  $dop_zdarma_d = pg_query($dop_zdarma_q);\r\n\t\t\t\t  while($dop_zdarma_row = pg_fetch_assoc($dop_zdarma_d)) {\r\n\t\t\t\t  \tif ($dop_zdarma_row['doprava_zdarma'] == 1) {\r\n\t\t\t\t\t\t$doprava_zdarma = \"1\";\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  $doprava_zdarma = ( round($USER_KOSIK['db_max_cena_s_dph']) >= ($promena_postovne_zdarma_od/$kurz)) ? 1 : 0;\r\n\t\t\t\t  $doprava_cena_q = \"SELECT * FROM doprava WHERE hmotnost_min <= \".$USER_KOSIK['hmotnost'].\" AND hmotnost_max > \".$USER_KOSIK['hmotnost'].\"\";\r\n\t\t\t\t  $doprava_cena_d = pg_query($doprava_cena_q);\r\n\t\t\t\t  $DOPRAVA_HM = array();\r\n\t\t\t\t  while($doprava_cena_r = pg_fetch_assoc($doprava_cena_d)) {\r\n\t\t\t\t\t  if ($doprava_zdarma == 1 && $doprava_cena_r['doprava_id'] != 2) {\r\n\t\t\t\t\t\t  $DOPRAVA_HM[$doprava_cena_r['doprava_id']] = array(\r\n\t\t\t\t\t\t\t'poradi' => $DOPRAVA[$doprava_cena_r['doprava_id']]['poradi'],\r\n\t\t\t\t\t\t\t'id' => $doprava_cena_r['doprava_id'],\r\n\t\t\t\t\t\t\t'name' => $doprava_cena_r['dopravce_nazev'],\r\n\t\t\t\t\t\t\t'cena' => str_replace(\",\",\".\",0),\r\n\t\t\t\t\t\t\t'platba' => $DOPRAVA[$doprava_cena_r['doprava_id']]['platba']\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t  } else {\r\n\t\t\t\t\t\t  $DOPRAVA_HM[$doprava_cena_r['doprava_id']] = array(\r\n\t\t\t\t\t\t\t'poradi' => $DOPRAVA[$doprava_cena_r['doprava_id']]['poradi'],\r\n\t\t\t\t\t\t\t'id' => $doprava_cena_r['doprava_id'],\r\n\t\t\t\t\t\t\t'name' => $doprava_cena_r['dopravce_nazev'],\r\n\t\t\t\t\t\t\t'cena' => str_replace(\",\",\".\",$doprava_cena_r['cena']),\r\n\t\t\t\t\t\t\t'platba' => $DOPRAVA[$doprava_cena_r['doprava_id']]['platba']\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t  }\r\n\t\t\t\t  }")]
    [InlineData("<?php\r\n$d_kosik_produkty = array();\r\nif ($USER_KOSIK_POLOZKY != NULL) :\r\n    reset($USER_KOSIK_POLOZKY);\r\n    while (list($data_id) = each($USER_KOSIK_POLOZKY)) :\r\n        reset($USER_KOSIK_POLOZKY[\"$data_id\"]);\r\n        array_push($d_kosik_produkty, array(\r\n            \"code\" => $USER_KOSIK_POLOZKY[\"$data_id\"][\"ean\"],\r\n            \"name\" => $USER_KOSIK_POLOZKY[\"$data_id\"][\"product_name\"],\r\n            \"totalPrice\" => array(\r\n                \"amount\" => str_replace('.','',$USER_KOSIK_POLOZKY[\"$data_id\"][\"cena_s_dph_all\"]) * 100,\r\n                \"currency\" => \"CZK\"\r\n            ),\r\n            \"totalVat\" => array(\r\n                \"amount\" => ($USER_KOSIK_POLOZKY[\"$data_id\"][\"db_cena_s_dph_all\"] - $USER_KOSIK_POLOZKY[\"$data_id\"][\"db_cena_bez_dph\"]) * 100,\r\n                \"currency\" => \"CZK\",\r\n                \"vatRate\" =>  $USER_KOSIK_POLOZKY[\"$data_id\"][\"cena_dph\"]\r\n            ),\r\n        ));\r\n    endwhile;\r\nendif;\r\n\r\n?>")]
    public void UpgradesValidFile(string content)
    {
        //Arrange
        var file = new FileWrapper("file.php", content);

        //Act
        file.UpgradeWhileListEach();

        //Assert
        _output.WriteLine(content);
        _output.WriteLine("=========================================================");
        var updated = file.Content.ToString();
        _output.WriteLine(updated);
        Assert.True(file.IsModified);
    }
}
